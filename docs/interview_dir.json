[
  {
    "text": "HTML",
    "collapsed": true,
    "collapsible": true,
    "key": "interview/01html",
    "items": [
      {
        "text": "基础",
        "collapsed": true,
        "collapsible": true,
        "key": "interview/01html/010base",
        "items": [
          {
            "text": "说一下对语体化的理解？",
            "key": "/interview/01html/010base/010010_stylization",
            "link": "/interview/01html/010base/010010_stylization"
          },
          {
            "text": "DOCTYPE 有什么作用？ 严格模式与混杂模式如何区分？它们有何意义？",
            "key": "/interview/01html/010base/010020_DOCTYPE1",
            "link": "/interview/01html/010base/010020_DOCTYPE1"
          },
          {
            "text": "HTML5 为什么只写 <!DOCTYPE html> ？",
            "key": "/interview/01html/010base/010030_DOCTYPE2",
            "link": "/interview/01html/010base/010030_DOCTYPE2"
          },
          {
            "text": "页面出现了乱码，是什么问题？如何解决？",
            "key": "/interview/01html/010base/010040_garbled_code",
            "link": "/interview/01html/010base/010040_garbled_code"
          },
          {
            "text": "谈谈对 Web 标准以及 W3C 标准的理解？",
            "key": "/interview/01html/010base/010050_web_and_w3c",
            "link": "/interview/01html/010base/010050_web_and_w3c"
          },
          {
            "text": "HTML 全局属性（Global Attribute）有哪些？",
            "key": "/interview/01html/010base/010060_global_attribute",
            "link": "/interview/01html/010base/010060_global_attribute"
          },
          {
            "text": "前端页面有哪三层构成，分别是什么？作用是什么？",
            "key": "/interview/01html/010base/010070_page_constitute",
            "link": "/interview/01html/010base/010070_page_constitute"
          }
        ]
      },
      {
        "text": "标签&属性",
        "collapsed": true,
        "collapsible": true,
        "key": "interview/01html/020labels_attributes",
        "items": [
          {
            "text": "行内元素有哪些？块级元素有哪些？ 空 (void) 元素有那些？",
            "key": "/interview/01html/020labels_attributes/020010_element_type",
            "link": "/interview/01html/020labels_attributes/020010_element_type"
          },
          {
            "text": "meta 标签有哪些常见的值？",
            "key": "/interview/01html/020labels_attributes/020020_meta_label",
            "link": "/interview/01html/020labels_attributes/020020_meta_label"
          },
          {
            "text": "meta viewport 是做什么用的，怎么写？",
            "key": "/interview/01html/020labels_attributes/020030_meta_viewport",
            "link": "/interview/01html/020labels_attributes/020030_meta_viewport"
          },
          {
            "text": "如何在 HTML 页面上展示一段代码？",
            "key": "/interview/01html/020labels_attributes/020040_code_view",
            "link": "/interview/01html/020labels_attributes/020040_code_view"
          },
          {
            "text": "img 标签的 title 和 alt 属性有什么区别？",
            "key": "/interview/01html/020labels_attributes/020050_img_alt_title",
            "link": "/interview/01html/020labels_attributes/020050_img_alt_title"
          },
          {
            "text": "data- 属性的作用？",
            "key": "/interview/01html/020labels_attributes/020060_data_attribute",
            "link": "/interview/01html/020labels_attributes/020060_data_attribute"
          },
          {
            "text": "iframe 优缺点？",
            "key": "/interview/01html/020labels_attributes/020070_iframe",
            "link": "/interview/01html/020labels_attributes/020070_iframe"
          },
          {
            "text": "如何实现网页和 iframe 之间的通讯？",
            "key": "/interview/01html/020labels_attributes/020080_iframe_communication",
            "link": "/interview/01html/020labels_attributes/020080_iframe_communication"
          }
        ]
      },
      {
        "text": "表单",
        "collapsed": true,
        "collapsible": true,
        "key": "interview/01html/030form",
        "items": [
          {
            "text": "在 input 里，name 属性有什么作用？",
            "key": "/interview/01html/030form/030010_input_name",
            "link": "/interview/01html/030form/030010_input_name"
          },
          {
            "text": "label 属性有什么作用？如何使用？",
            "key": "/interview/01html/030form/030020_label",
            "link": "/interview/01html/030form/030020_label"
          },
          {
            "text": "placeholder 属性有什么作用？",
            "key": "/interview/01html/030form/030030_placeholder",
            "link": "/interview/01html/030form/030030_placeholder"
          },
          {
            "text": "type=hidden 隐藏域有什么作用？",
            "key": "/interview/01html/030form/030040_type_hidden",
            "link": "/interview/01html/030form/030040_type_hidden"
          }
        ]
      },
      {
        "text": "其他",
        "collapsed": true,
        "collapsible": true,
        "key": "interview/01html/040other",
        "items": [
          {
            "text": "什么是渐进增强，什么是优雅降级？",
            "key": "/interview/01html/040other/040010_progressive_enhancement",
            "link": "/interview/01html/040other/040010_progressive_enhancement"
          },
          {
            "text": "HTML5的文件离线储存怎么使用，工作原理是什么？",
            "key": "/interview/01html/040other/040020_off_line_storage",
            "link": "/interview/01html/040other/040020_off_line_storage"
          },
          {
            "text": "前端需要注意哪些 SEO?",
            "key": "/interview/01html/040other/040030_seo",
            "link": "/interview/01html/040other/040030_seo"
          },
          {
            "text": "请描述下 SEO 中的 TDK？",
            "key": "/interview/01html/040other/040040_seo_tdk",
            "link": "/interview/01html/040other/040040_seo_tdk"
          },
          {
            "text": "Canvas 和 SVG 有什么区别？",
            "key": "/interview/01html/040other/040050_canvas_svg",
            "link": "/interview/01html/040other/040050_canvas_svg"
          }
        ]
      }
    ]
  },
  {
    "text": "CSS",
    "collapsed": true,
    "collapsible": true,
    "key": "interview/02css",
    "items": [
      {
        "text": "基础",
        "collapsed": true,
        "collapsible": true,
        "key": "interview/02css/010base",
        "items": [
          {
            "text": "CSS 加载方式有几种？",
            "key": "/interview/02css/010base/010010_css_load",
            "link": "/interview/02css/010base/010010_css_load"
          },
          {
            "text": "@import 有什么作用？如何使用？",
            "key": "/interview/02css/010base/010020_@import",
            "link": "/interview/02css/010base/010020_@import"
          },
          {
            "text": "@charset 有什么作用？",
            "key": "/interview/02css/010base/010030_@charset",
            "link": "/interview/02css/010base/010030_@charset"
          },
          {
            "text": "简述 src 和 href 的区别？",
            "key": "/interview/02css/010base/010040_src_href",
            "link": "/interview/02css/010base/010040_src_href"
          },
          {
            "text": "导入 CSS 时 link 和 @import 区别？",
            "key": "/interview/02css/010base/010050_link_@import",
            "link": "/interview/02css/010base/010050_link_@import"
          }
        ]
      },
      {
        "text": "选择器",
        "collapsed": true,
        "collapsible": true,
        "key": "interview/02css/020selector",
        "items": [
          {
            "text": "CSS 选择器常见的有几种？",
            "key": "/interview/02css/020selector/020010_selector_all",
            "link": "/interview/02css/020selector/020010_selector_all"
          },
          {
            "text": "id 选择器和 class 选择器的使用场景分别是什么？",
            "key": "/interview/02css/020selector/020020_id_calss_selector",
            "link": "/interview/02css/020selector/020020_id_calss_selector"
          },
          {
            "text": "伪类选择器有哪些？",
            "key": "/interview/02css/020selector/020030_pseudoclass_selector",
            "link": "/interview/02css/020selector/020030_pseudoclass_selector"
          },
          {
            "text": "伪元素和伪类的区别？",
            "key": "/interview/02css/020selector/020040_pseudoelements_and_pseudoclasses",
            "link": "/interview/02css/020selector/020040_pseudoelements_and_pseudoclasses"
          },
          {
            "text": "CSS 中是否存在父选择器？如何通过子元素选取父元素？",
            "key": "/interview/02css/020selector/020050_parent_selector",
            "link": "/interview/02css/020selector/020050_parent_selector"
          },
          {
            "text": "选择器的优先级是如何计算的？",
            "key": "/interview/02css/020selector/020060_selector_priority",
            "link": "/interview/02css/020selector/020060_selector_priority"
          },
          {
            "text": "浏览器是怎样解析 CSS 选择器的？",
            "key": "/interview/02css/020selector/020070_browser_parse_selector",
            "link": "/interview/02css/020selector/020070_browser_parse_selector"
          }
        ]
      },
      {
        "text": "结构&层叠",
        "collapsed": true,
        "collapsible": true,
        "key": "interview/02css/030structure_stacking",
        "items": [
          {
            "text": "什么是 CSS 继承？哪些属性能继承，哪些不能？",
            "key": "/interview/02css/030structure_stacking/030010_css_inherit",
            "link": "/interview/02css/030structure_stacking/030010_css_inherit"
          },
          {
            "text": "CSS 中各个元素的层叠顺序？",
            "key": "/interview/02css/030structure_stacking/030020_css_element_cascading_order",
            "link": "/interview/02css/030structure_stacking/030020_css_element_cascading_order"
          }
        ]
      },
      {
        "text": "值&单位",
        "collapsed": true,
        "collapsible": true,
        "key": "interview/02css/040value_unit",
        "items": [
          {
            "text": "有没有使用过视网膜分辨率的图形？当中使用什么技术？",
            "key": "/interview/02css/040value_unit/040010_retinal_resolution",
            "link": "/interview/02css/040value_unit/040010_retinal_resolution"
          },
          {
            "text": "px，em，rem，vw 有什么区别？使用场景？",
            "key": "/interview/02css/040value_unit/040020_px_em_rem_vw",
            "link": "/interview/02css/040value_unit/040020_px_em_rem_vw"
          },
          {
            "text": "什么是物理像素，逻辑像素和像素密度，为什么在移动端开发时需要用到@3x, @2x这种图片？",
            "key": "/interview/02css/040value_unit/040030_pixel",
            "link": "/interview/02css/040value_unit/040030_pixel"
          }
        ]
      },
      {
        "text": "字体&文本",
        "collapsed": true,
        "collapsible": true,
        "key": "interview/02css/050font_text",
        "items": [
          {
            "text": "简述字体图标的原理",
            "key": "/interview/02css/050font_text/050010_font_icon",
            "link": "/interview/02css/050font_text/050010_font_icon"
          },
          {
            "text": "浏览器中为什么建议使用偶数大小的字体?",
            "key": "/interview/02css/050font_text/050020_even_numbers_font",
            "link": "/interview/02css/050font_text/050020_even_numbers_font"
          },
          {
            "text": "如何让浏览器显示小于 12px 的文字？",
            "key": "/interview/02css/050font_text/050030_less_than_12px",
            "link": "/interview/02css/050font_text/050030_less_than_12px"
          },
          {
            "text": "让页面里的字体变清晰，变细用CSS怎么做？ ",
            "key": "/interview/02css/050font_text/050040_font_becomes_clearer_and_thinner",
            "link": "/interview/02css/050font_text/050040_font_becomes_clearer_and_thinner"
          }
        ]
      },
      {
        "text": "视觉格式化",
        "collapsed": true,
        "collapsible": true,
        "key": "interview/02css/060visual_formatting",
        "items": [
          {
            "text": "IE 盒模型和 W3C 盒模型有什么区别?",
            "key": "/interview/02css/060visual_formatting/060010_ie_w3c_box",
            "link": "/interview/02css/060visual_formatting/060010_ie_w3c_box"
          },
          {
            "text": "在什么场景下会出现外边距合并？如何合并？如何不让相邻元素外边距合并？父子外边距合并的范例？",
            "key": "/interview/02css/060visual_formatting/060020_outer_margin_merge",
            "link": "/interview/02css/060visual_formatting/060020_outer_margin_merge"
          },
          {
            "text": "line-height: 2; 和 line-height: 200%; 有什么区别?",
            "key": "/interview/02css/060visual_formatting/060030_line_height",
            "link": "/interview/02css/060visual_formatting/060030_line_height"
          },
          {
            "text": "行内元素的边框、边界等 '框属性' 是由 font-size 还是 line-height 控制？",
            "key": "/interview/02css/060visual_formatting/060040_border_of_inline_elements",
            "link": "/interview/02css/060visual_formatting/060040_border_of_inline_elements"
          },
          {
            "text": "height=line-height 可以用来垂直居中单行文本？代码怎么实现？",
            "key": "/interview/02css/060visual_formatting/060050_vertically_centered_single_line_text",
            "link": "/interview/02css/060visual_formatting/060050_vertically_centered_single_line_text"
          },
          {
            "text": "inline-block 有什么特性？实际应用场景？",
            "key": "/interview/02css/060visual_formatting/060060_inline_block",
            "link": "/interview/02css/060visual_formatting/060060_inline_block"
          },
          {
            "text": "如何去除两个按钮中间的缝隙问题？",
            "key": "/interview/02css/060visual_formatting/060070_del_button_crevice",
            "link": "/interview/02css/060visual_formatting/060070_del_button_crevice"
          },
          {
            "text": "一个页面有一排高度不一样的产品图，这时如果我们用 inline-block ，怎样使他们顶端对齐？",
            "key": "/interview/02css/060visual_formatting/060080_top_align",
            "link": "/interview/02css/060visual_formatting/060080_top_align"
          }
        ]
      },
      {
        "text": "盒子",
        "collapsed": true,
        "collapsible": true,
        "key": "interview/02css/070box",
        "items": [
          {
            "text": "CSS 盒模型？",
            "key": "/interview/02css/070box/070010_css_box_model",
            "link": "/interview/02css/070box/070010_css_box_model"
          },
          {
            "text": "BFC 是什么？如何构成 BFC？BFC 有什么作用？",
            "key": "/interview/02css/070box/070020_css_bfc",
            "link": "/interview/02css/070box/070020_css_bfc"
          },
          {
            "text": "CSS 中隐藏元素的方法有哪些？有什么区别？",
            "key": "/interview/02css/070box/070030_hide_elements",
            "link": "/interview/02css/070box/070030_hide_elements"
          },
          {
            "text": "文本溢出加 ... 如何实现？",
            "key": "/interview/02css/070box/070040_text_overflow",
            "link": "/interview/02css/070box/070040_text_overflow"
          },
          {
            "text": "如何在页面上实现一个圆形的可点击区域？",
            "key": "/interview/02css/070box/070050_circular_clickable_area",
            "link": "/interview/02css/070box/070050_circular_clickable_area"
          },
          {
            "text": "margin 什么时候会无效？",
            "key": "/interview/02css/070box/070060_margin_invalid",
            "link": "/interview/02css/070box/070060_margin_invalid"
          },
          {
            "text": "margin 重叠问题?",
            "key": "/interview/02css/070box/070070_margin_overlap",
            "link": "/interview/02css/070box/070070_margin_overlap"
          }
        ]
      },
      {
        "text": "浮动",
        "collapsed": true,
        "collapsible": true,
        "key": "interview/02css/080float",
        "items": [
          {
            "text": "浮动元素有什么特征？对父容器、其他浮动元素、普通元素、文字分别有什么影响？",
            "key": "/interview/02css/080float/080010_floating_element",
            "link": "/interview/02css/080float/080010_floating_element"
          },
          {
            "text": "为什么需要清除浮动？清除浮动的方式？",
            "key": "/interview/02css/080float/080020_clear_float",
            "link": "/interview/02css/080float/080020_clear_float"
          },
          {
            "text": "clear 属性清除浮动的原理？",
            "key": "/interview/02css/080float/080030_clear_float_principle",
            "link": "/interview/02css/080float/080030_clear_float_principle"
          }
        ]
      },
      {
        "text": "定位",
        "collapsed": true,
        "collapsible": true,
        "key": "interview/02css/090postion",
        "items": [
          {
            "text": "postion 有什么属性，static是什么? static 在文档流里吗?",
            "key": "/interview/02css/090postion/090010_postion",
            "link": "/interview/02css/090postion/090010_postion"
          },
          {
            "text": "有几种定位方式？分别是如何实现定位的？参考点是什么？使用场景是什么？",
            "key": "/interview/02css/090postion/090020_positioning_method",
            "link": "/interview/02css/090postion/090020_positioning_method"
          },
          {
            "text": "absolute 与 fixed 区别？",
            "key": "/interview/02css/090postion/090030_absolute_fixed",
            "link": "/interview/02css/090postion/090030_absolute_fixed"
          },
          {
            "text": "z-index 有什么作用？如何使用？",
            "key": "/interview/02css/090postion/090040_zindex",
            "link": "/interview/02css/090postion/090040_zindex"
          },
          {
            "text": "z-index 属性在什么情况下会失效？",
            "key": "/interview/02css/090postion/090050_zindex_invalid",
            "link": "/interview/02css/090postion/090050_zindex_invalid"
          }
        ]
      },
      {
        "text": "布局",
        "collapsed": true,
        "collapsible": true,
        "key": "interview/02css/100layout",
        "items": [
          {
            "text": "flex 布局 和 grid 布局区别？",
            "key": "/interview/02css/100layout/100010_flex_grid",
            "link": "/interview/02css/100layout/100010_flex_grid"
          },
          {
            "text": "flex: 1 代表的含义是什么？",
            "key": "/interview/02css/100layout/100020_flex1",
            "link": "/interview/02css/100layout/100020_flex1"
          },
          {
            "text": "CSS 如何实现瀑布流布局？",
            "key": "/interview/02css/100layout/100030_waterfall_flow_layout",
            "link": "/interview/02css/100layout/100030_waterfall_flow_layout"
          },
          {
            "text": "如何让块级元素水平居中？如何让行内元素水平居中？如何让 inline-block 元素水平居中？",
            "key": "/interview/02css/100layout/100040_horizontally",
            "link": "/interview/02css/100layout/100040_horizontally"
          },
          {
            "text": "垂直上下居中的办法？",
            "key": "/interview/02css/100layout/100050_vertical_top_bottom_center",
            "link": "/interview/02css/100layout/100050_vertical_top_bottom_center"
          },
          {
            "text": "如何实现垂直居中？",
            "key": "/interview/02css/100layout/100060_vertically_centered",
            "link": "/interview/02css/100layout/100060_vertically_centered"
          },
          {
            "text": "为什么 margin:auto 无法实现垂直居中?",
            "key": "/interview/02css/100layout/100070_margin_auto1",
            "link": "/interview/02css/100layout/100070_margin_auto1"
          },
          {
            "text": "为什么图片使用 margin:auto 不能水平居中？",
            "key": "/interview/02css/100layout/100080_margin_auto2",
            "link": "/interview/02css/100layout/100080_margin_auto2"
          },
          {
            "text": "响应式布局原理？",
            "key": "/interview/02css/100layout/100090_principle_of_responsive_layout",
            "link": "/interview/02css/100layout/100090_principle_of_responsive_layout"
          }
        ]
      },
      {
        "text": "浏览器",
        "collapsed": true,
        "collapsible": true,
        "key": "interview/02css/110browser",
        "items": [
          {
            "text": "IE6、7 的 Hack 写法是？ ",
            "key": "/interview/02css/110browser/110010_ie6and7_hack",
            "link": "/interview/02css/110browser/110010_ie6and7_hack"
          },
          {
            "text": "列举常见浏览器兼容性问题及处理范例？ ",
            "key": "/interview/02css/110browser/110020_browser_compatible",
            "link": "/interview/02css/110browser/110020_browser_compatible"
          },
          {
            "text": "CSS Reset 和 Normalize.css 有什么区别？ ",
            "key": "/interview/02css/110browser/110030_css_reset_and_normalize",
            "link": "/interview/02css/110browser/110030_css_reset_and_normalize"
          },
          {
            "text": "CSS 预编译器是什么？后编译器（PostCSS）是什么？ ",
            "key": "/interview/02css/110browser/110040_css_compiler",
            "link": "/interview/02css/110browser/110040_css_compiler"
          },
          {
            "text": "CSS 预处理器的比较：Less、Sass？",
            "key": "/interview/02css/110browser/110050_css_preprocessor",
            "link": "/interview/02css/110browser/110050_css_preprocessor"
          }
        ]
      },
      {
        "text": "其他",
        "collapsed": true,
        "collapsible": true,
        "key": "interview/02css/120other",
        "items": [
          {
            "text": "列举你了解的 HTML5、CSS3 新特性？",
            "key": "/interview/02css/120other/120010_new_features",
            "link": "/interview/02css/120other/120010_new_features"
          },
          {
            "text": "可以通过哪些方法优化 CSS3 Animation 渲染？",
            "key": "/interview/02css/120other/120020_animation_optimization",
            "link": "/interview/02css/120other/120020_animation_optimization"
          },
          {
            "text": "列举 CSS 编码规范？",
            "key": "/interview/02css/120other/120030_coding_specifications",
            "link": "/interview/02css/120other/120030_coding_specifications"
          },
          {
            "text": "编码规范的作用是什么？列举 5 条以上编码规范",
            "key": "/interview/02css/120other/120040_the_role_of_coding_norms",
            "link": "/interview/02css/120other/120040_the_role_of_coding_norms"
          },
          {
            "text": "display、float、position 的关系?",
            "key": "/interview/02css/120other/120050_display_float_position",
            "link": "/interview/02css/120other/120050_display_float_position"
          },
          {
            "text": "CSS 画一条 0.5px 的线思路？",
            "key": "/interview/02css/120other/120060_css_0.5px_line",
            "link": "/interview/02css/120other/120060_css_0.5px_line"
          },
          {
            "text": "1px 问题是什么？如何解决？",
            "key": "/interview/02css/120other/120070_css_1px",
            "link": "/interview/02css/120other/120070_css_1px"
          },
          {
            "text": "简述 CSS 隔离方案?",
            "key": "/interview/02css/120other/120080_css_quarantine",
            "link": "/interview/02css/120other/120080_css_quarantine"
          },
          {
            "text": "CSS 优化？",
            "key": "/interview/02css/120other/120090_css_optimization",
            "link": "/interview/02css/120other/120090_css_optimization"
          },
          {
            "text": "CSS 工程化理解？",
            "key": "/interview/02css/120other/120100_css_engineering",
            "link": "/interview/02css/120other/120100_css_engineering"
          }
        ]
      }
    ]
  },
  {
    "text": "JavaScript",
    "collapsed": true,
    "collapsible": true,
    "key": "interview/03javascript",
    "items": [
      {
        "text": "理论题",
        "collapsed": true,
        "collapsible": true,
        "key": "interview/03javascript/core",
        "items": [
          {
            "text": "基础",
            "collapsed": true,
            "collapsible": true,
            "key": "interview/03javascript/core/010base",
            "items": [
              {
                "text": "强类型语言和弱类型语言的区别？",
                "key": "/interview/03javascript/core/010base/010010_stronglytype_and_weaklytype",
                "link": "/interview/03javascript/core/010base/010010_stronglytype_and_weaklytype"
              },
              {
                "text": "解释型语言和编译型语言的区别？",
                "key": "/interview/03javascript/core/010base/010020_interpretive_and_compiled",
                "link": "/interview/03javascript/core/010base/010020_interpretive_and_compiled"
              },
              {
                "text": "面向过程与面向对象编程分别是什么？",
                "key": "/interview/03javascript/core/010base/010030_oop_pop",
                "link": "/interview/03javascript/core/010base/010030_oop_pop"
              },
              {
                "text": "let、const、var 的区别？",
                "key": "/interview/03javascript/core/010base/010040_let_const_var",
                "link": "/interview/03javascript/core/010base/010040_let_const_var"
              },
              {
                "text": "JS 中什么是变量提升？导致了什么问题？",
                "key": "/interview/03javascript/core/010base/010050_variable_elevation",
                "link": "/interview/03javascript/core/010base/010050_variable_elevation"
              },
              {
                "text": "什么是暂时性死区？",
                "key": "/interview/03javascript/core/010base/010055_tdz",
                "link": "/interview/03javascript/core/010base/010055_tdz"
              },
              {
                "text": "&&、||、!!、?? 运算符作用分别是什么?",
                "key": "/interview/03javascript/core/010base/010060_logical_operator",
                "link": "/interview/03javascript/core/010base/010060_logical_operator"
              },
              {
                "text": "JS 脚本延迟加载的方式有哪些？",
                "key": "/interview/03javascript/core/010base/010070_script_delayed_loading",
                "link": "/interview/03javascript/core/010base/010070_script_delayed_loading"
              }
            ]
          },
          {
            "text": "数据类型",
            "collapsed": true,
            "collapsible": true,
            "key": "interview/03javascript/core/020datatype",
            "items": [
              {
                "text": "JS 有哪些数据类型，区别是？",
                "key": "/interview/03javascript/core/020datatype/020010_datatype",
                "link": "/interview/03javascript/core/020datatype/020010_datatype"
              },
              {
                "text": "JS 数据类型判断的方式有哪些？",
                "key": "/interview/03javascript/core/020datatype/020020_datatype_judgment",
                "link": "/interview/03javascript/core/020datatype/020020_datatype_judgment"
              },
              {
                "text": "null 和 undefined 区别？",
                "key": "/interview/03javascript/core/020datatype/020030_null_undefined",
                "link": "/interview/03javascript/core/020datatype/020030_null_undefined"
              },
              {
                "text": "typeof null 的结果是什么，为什么？",
                "key": "/interview/03javascript/core/020datatype/020040_typeof_null",
                "link": "/interview/03javascript/core/020datatype/020040_typeof_null"
              },
              {
                "text": "intanceof 操作符实现原理？",
                "key": "/interview/03javascript/core/020datatype/020050_instanceof",
                "link": "/interview/03javascript/core/020datatype/020050_instanceof"
              },
              {
                "text": "JS 中 0.1+0.2 != 0.3？",
                "key": "/interview/03javascript/core/020datatype/020060_0.1_0.2_sum",
                "link": "/interview/03javascript/core/020datatype/020060_0.1_0.2_sum"
              },
              {
                "text": "typeof NaN 的结果是什么？",
                "key": "/interview/03javascript/core/020datatype/020070_typeof_nan",
                "link": "/interview/03javascript/core/020datatype/020070_typeof_nan"
              },
              {
                "text": "isNaN 和 Number.isNaN 函数的区别？",
                "key": "/interview/03javascript/core/020datatype/020080_isnan_number.isnan",
                "link": "/interview/03javascript/core/020datatype/020080_isnan_number.isnan"
              },
              {
                "text": "Object.is() 与比较操作符 ===、== 区别？",
                "key": "/interview/03javascript/core/020datatype/020090_object.is",
                "link": "/interview/03javascript/core/020datatype/020090_object.is"
              },
              {
                "text": "介绍基本数据类型的封箱与拆箱？",
                "key": "/interview/03javascript/core/020datatype/020100_sealing_unboxing",
                "link": "/interview/03javascript/core/020datatype/020100_sealing_unboxing"
              },
              {
                "text": "Number() 存储空间是多大？如后台发送一个超过最大存储数字怎么办？",
                "key": "/interview/03javascript/core/020datatype/020110_number_storage",
                "link": "/interview/03javascript/core/020datatype/020110_number_storage"
              },
              {
                "text": "什么是 symbol、有什么用处？",
                "key": "/interview/03javascript/core/020datatype/020120_symbol",
                "link": "/interview/03javascript/core/020datatype/020120_symbol"
              },
              {
                "text": "什么是原码、补码和反码？",
                "key": "/interview/03javascript/core/020datatype/020130_originalcode_complement_inversecode",
                "link": "/interview/03javascript/core/020datatype/020130_originalcode_complement_inversecode"
              },
              {
                "text": "JS 中 Map 和 Object、Set 和 Array？",
                "key": "/interview/03javascript/core/020datatype/020140_map_set",
                "link": "/interview/03javascript/core/020datatype/020140_map_set"
              },
              {
                "text": "JS 中 map、set 与 weakMap、weakSet 区别？",
                "key": "/interview/03javascript/core/020datatype/020160_map_set_weakmap_weakset",
                "link": "/interview/03javascript/core/020datatype/020160_map_set_weakmap_weakset"
              },
              {
                "text": "{} 和 [] 的 valueOf 和 toString 结果是什么？",
                "key": "/interview/03javascript/core/020datatype/020170_valueog_tostring",
                "link": "/interview/03javascript/core/020datatype/020170_valueog_tostring"
              },
              {
                "text": "如何使 (a == 1 && a == 2 && a == 3) 成立？",
                "key": "/interview/03javascript/core/020datatype/020180_a1_a2_a3_true",
                "link": "/interview/03javascript/core/020datatype/020180_a1_a2_a3_true"
              }
            ]
          },
          {
            "text": "对象",
            "collapsed": true,
            "collapsible": true,
            "key": "interview/03javascript/core/030object",
            "items": [
              {
                "text": "对象创建的方式有哪些，有什么区别？",
                "key": "/interview/03javascript/core/030object/030010_object_create",
                "link": "/interview/03javascript/core/030object/030010_object_create"
              },
              {
                "text": "new 操作符的原理或者说执行过程？",
                "key": "/interview/03javascript/core/030object/030020_new",
                "link": "/interview/03javascript/core/030object/030020_new"
              },
              {
                "text": "如何判断一个对象是否属于某个类？",
                "key": "/interview/03javascript/core/030object/030030_object_in_class",
                "link": "/interview/03javascript/core/030object/030030_object_in_class"
              },
              {
                "text": "如何判断对象是否为空？",
                "key": "/interview/03javascript/core/030object/030040_judge_empty_object",
                "link": "/interview/03javascript/core/030object/030040_judge_empty_object"
              },
              {
                "text": "如何使用 for...of 遍历普通对象？",
                "key": "/interview/03javascript/core/030object/030050_forof_in_object",
                "link": "/interview/03javascript/core/030object/030050_forof_in_object"
              },
              {
                "text": "介绍下深拷贝、浅拷贝，两者区别，object.assign 是哪种？",
                "key": "/interview/03javascript/core/030object/030060_object_deepcopy_lightcopy",
                "link": "/interview/03javascript/core/030object/030060_object_deepcopy_lightcopy"
              }
            ]
          },
          {
            "text": "数组",
            "collapsed": true,
            "collapsible": true,
            "key": "interview/03javascript/core/040array",
            "items": [
              {
                "text": "JS 判断数组类型的方式有哪些？",
                "key": "/interview/03javascript/core/040array/040010_arraytype_judgment",
                "link": "/interview/03javascript/core/040array/040010_arraytype_judgment"
              },
              {
                "text": "数组原生方法都有哪些？",
                "key": "/interview/03javascript/core/040array/040020_array_native_method",
                "link": "/interview/03javascript/core/040array/040020_array_native_method"
              },
              {
                "text": "数组的哪些 API 会改变原数组？",
                "key": "/interview/03javascript/core/040array/040025_update_originalarray",
                "link": "/interview/03javascript/core/040array/040025_update_originalarray"
              },
              {
                "text": "数组的哪些 API 不会改变原数组？",
                "key": "/interview/03javascript/core/040array/040028_no_update_originalarray",
                "link": "/interview/03javascript/core/040array/040028_no_update_originalarray"
              },
              {
                "text": "数组去重的方式有哪些？",
                "key": "/interview/03javascript/core/040array/040030_array_deduplication",
                "link": "/interview/03javascript/core/040array/040030_array_deduplication"
              },
              {
                "text": "类数组是什么，和数组有什么区别，如何转化成数组？",
                "key": "/interview/03javascript/core/040array/040040_classarray",
                "link": "/interview/03javascript/core/040array/040040_classarray"
              },
              {
                "text": "为什么函数的 arguments 参数是类数组而不是数组？如何遍历类数组?",
                "key": "/interview/03javascript/core/040array/040050_arguments_is_classarray",
                "link": "/interview/03javascript/core/040array/040050_arguments_is_classarray"
              },
              {
                "text": "for...of、 for...in 和 forEach、map 的区别？",
                "key": "/interview/03javascript/core/040array/040060_foreach_map_forof_forin",
                "link": "/interview/03javascript/core/040array/040060_foreach_map_forof_forin"
              }
            ]
          },
          {
            "text": "函数",
            "collapsed": true,
            "collapsible": true,
            "key": "interview/03javascript/core/050function",
            "items": [
              {
                "text": "箭头函数与普通函数的区别？",
                "key": "/interview/03javascript/core/050function/050010_arrow_function",
                "link": "/interview/03javascript/core/050function/050010_arrow_function"
              },
              {
                "text": "如果 new 一个箭头函数的会怎样？",
                "key": "/interview/03javascript/core/050function/050020_new_arrow_function",
                "link": "/interview/03javascript/core/050function/050020_new_arrow_function"
              },
              {
                "text": "什么是尾调用、尾递归、蹦床函数?",
                "key": "/interview/03javascript/core/050function/050030_function_tail_call",
                "link": "/interview/03javascript/core/050function/050030_function_tail_call"
              },
              {
                "text": "什么是柯里化，应用场景？",
                "key": "/interview/03javascript/core/050function/050040_function_currying",
                "link": "/interview/03javascript/core/050function/050040_function_currying"
              },
              {
                "text": "谈谈对函数式编程的理解？",
                "key": "/interview/03javascript/core/050function/050050_functional_programming",
                "link": "/interview/03javascript/core/050function/050050_functional_programming"
              },
              {
                "text": "什么是高阶函数？",
                "key": "/interview/03javascript/core/050function/050060_function_hoc",
                "link": "/interview/03javascript/core/050function/050060_function_hoc"
              }
            ]
          },
          {
            "text": "异步",
            "collapsed": true,
            "collapsible": true,
            "key": "interview/03javascript/core/060asynchronous",
            "items": [
              {
                "text": "什么是同步、什么是异步？",
                "key": "/interview/03javascript/core/060asynchronous/060010_synchronous_and_asynchronous",
                "link": "/interview/03javascript/core/060asynchronous/060010_synchronous_and_asynchronous"
              },
              {
                "text": "简述 Promise，有几种状态、特点是什么、解决了什么问题、优缺点是什么？",
                "key": "/interview/03javascript/core/060asynchronous/060020_promise",
                "link": "/interview/03javascript/core/060asynchronous/060020_promise"
              },
              {
                "text": "Promise then 第二个参数和catch的区别是什么?",
                "key": "/interview/03javascript/core/060asynchronous/060030_then_secondparam_and_catch",
                "link": "/interview/03javascript/core/060asynchronous/060030_then_secondparam_and_catch"
              },
              {
                "text": "Promise.all 和 Promise.race 的区别和使用场景？",
                "key": "/interview/03javascript/core/060asynchronous/060040_promise_all_and_race",
                "link": "/interview/03javascript/core/060asynchronous/060040_promise_all_and_race"
              },
              {
                "text": "Promise 和 setTimeout 的区别？",
                "key": "/interview/03javascript/core/060asynchronous/060050_promise_and_settimeout",
                "link": "/interview/03javascript/core/060asynchronous/060050_promise_and_settimeout"
              },
              {
                "text": "async/await 是什么、有什么优势、实现原理？",
                "key": "/interview/03javascript/core/060asynchronous/060060_async_await",
                "link": "/interview/03javascript/core/060asynchronous/060060_async_await"
              },
              {
                "text": "Iterator是什么，有什么作用？",
                "key": "/interview/03javascript/core/060asynchronous/060070_iterator",
                "link": "/interview/03javascript/core/060asynchronous/060070_iterator"
              },
              {
                "text": "Generator 函数是什么、有什么作用、使用场景？",
                "key": "/interview/03javascript/core/060asynchronous/060080_generator",
                "link": "/interview/03javascript/core/060asynchronous/060080_generator"
              },
              {
                "text": "Generator 是如何做到中断和恢复的?",
                "key": "/interview/03javascript/core/060asynchronous/060090_generator_Interruption_and_recovery",
                "link": "/interview/03javascript/core/060asynchronous/060090_generator_Interruption_and_recovery"
              },
              {
                "text": "async/await, generator, promise这三者的关联和区别是什么?",
                "key": "/interview/03javascript/core/060asynchronous/060100_promise_asyncawait_generator",
                "link": "/interview/03javascript/core/060asynchronous/060100_promise_asyncawait_generator"
              },
              {
                "text": "defer 和 async ？",
                "key": "/interview/03javascript/core/060asynchronous/060110_defer_async",
                "link": "/interview/03javascript/core/060asynchronous/060110_defer_async"
              }
            ]
          },
          {
            "text": "作用域",
            "collapsed": true,
            "collapsible": true,
            "key": "interview/03javascript/core/070scope",
            "items": [
              {
                "text": "简单阐述作用域、作用域链？",
                "key": "/interview/03javascript/core/070scope/070010_scope",
                "link": "/interview/03javascript/core/070scope/070010_scope"
              },
              {
                "text": "什么是闭包、本质是什么、优缺点、应用场景？",
                "key": "/interview/03javascript/core/070scope/070020_closure",
                "link": "/interview/03javascript/core/070scope/070020_closure"
              },
              {
                "text": "什么是执行上下文、JS 有几种上下文？",
                "key": "/interview/03javascript/core/070scope/070030_execution_context",
                "link": "/interview/03javascript/core/070scope/070030_execution_context"
              }
            ]
          },
          {
            "text": "This",
            "collapsed": true,
            "collapsible": true,
            "key": "interview/03javascript/core/080this",
            "items": [
              {
                "text": "简单阐述对 This 的理解？",
                "key": "/interview/03javascript/core/080this/080010_this",
                "link": "/interview/03javascript/core/080this/080010_this"
              },
              {
                "text": "如何改变函数内部的 this 指针的指向？",
                "key": "/interview/03javascript/core/080this/080020_update_function_this",
                "link": "/interview/03javascript/core/080this/080020_update_function_this"
              },
              {
                "text": "call、apply 及 bind 函数区别？",
                "key": "/interview/03javascript/core/080this/080030_call_apply_bind",
                "link": "/interview/03javascript/core/080this/080030_call_apply_bind"
              }
            ]
          },
          {
            "text": "原型",
            "collapsed": true,
            "collapsible": true,
            "key": "interview/03javascript/core/090prototype",
            "items": [
              {
                "text": "什么是原型、原型链？",
                "key": "/interview/03javascript/core/090prototype/090010_prototype",
                "link": "/interview/03javascript/core/090prototype/090010_prototype"
              },
              {
                "text": "什么是继承、JS 有哪些继承方式？",
                "key": "/interview/03javascript/core/090prototype/090020_inherit",
                "link": "/interview/03javascript/core/090prototype/090020_inherit"
              },
              {
                "text": "如果一个构造函数 bind 一个对象，用此构造函数创建出的实例会继承这个对象的属性吗？为什么？",
                "key": "/interview/03javascript/core/090prototype/090030_constructor_bind_and_inherit",
                "link": "/interview/03javascript/core/090prototype/090030_constructor_bind_and_inherit"
              }
            ]
          },
          {
            "text": "事件循环",
            "collapsed": true,
            "collapsible": true,
            "key": "interview/03javascript/core/100eventloop",
            "items": [
              {
                "text": "什么是微任务、宏任务？",
                "key": "/interview/03javascript/core/100eventloop/100010_microtask_macrotask",
                "link": "/interview/03javascript/core/100eventloop/100010_microtask_macrotask"
              },
              {
                "text": "微任务、宏任务的区分是为了做什么? 优先级?",
                "key": "/interview/03javascript/core/100eventloop/100020_microtask_macrotask_distinguish",
                "link": "/interview/03javascript/core/100eventloop/100020_microtask_macrotask_distinguish"
              },
              {
                "text": "阐述 JS 事件循环 EventLoop？",
                "key": "/interview/03javascript/core/100eventloop/100030_eventloop",
                "link": "/interview/03javascript/core/100eventloop/100030_eventloop"
              },
              {
                "text": "setTimeout(fn, 0)多久才执行 -> Event Loop？",
                "key": "/interview/03javascript/core/100eventloop/100040_eventloop_settimeout0",
                "link": "/interview/03javascript/core/100eventloop/100040_eventloop_settimeout0"
              },
              {
                "text": "JS 中事件循环和 Node 事件循环区别？",
                "key": "/interview/03javascript/core/100eventloop/100050_eventloop_node",
                "link": "/interview/03javascript/core/100eventloop/100050_eventloop_node"
              }
            ]
          },
          {
            "text": "浏览器对象",
            "collapsed": true,
            "collapsible": true,
            "key": "interview/03javascript/core/110browser",
            "items": [
              {
                "text": "setTimeout、setInterval、requestAnimationFrame 各有什么特点？",
                "key": "/interview/03javascript/core/110browser/110010_settimeout_setinterval_requestanimationframe",
                "link": "/interview/03javascript/core/110browser/110010_settimeout_setinterval_requestanimationframe"
              },
              {
                "text": "setTimeout 倒计时为什么会出现误差？",
                "key": "/interview/03javascript/core/110browser/110020_settimeout_error",
                "link": "/interview/03javascript/core/110browser/110020_settimeout_error"
              },
              {
                "text": "简单阐述 JS 垃圾回收机制(GC)？",
                "key": "/interview/03javascript/core/110browser/110030_gc",
                "link": "/interview/03javascript/core/110browser/110030_gc"
              },
              {
                "text": "cookie、sessionStorage、localStorage 的区别?",
                "key": "/interview/03javascript/core/110browser/110040_cookie_sessionStorage_localStorage",
                "link": "/interview/03javascript/core/110browser/110040_cookie_sessionStorage_localStorage"
              },
              {
                "text": "DOM 事件模型是什么？",
                "key": "/interview/03javascript/core/110browser/110050_dom_event_model",
                "link": "/interview/03javascript/core/110browser/110050_dom_event_model"
              },
              {
                "text": "解释 DOM2 事件传播机制？",
                "key": "/interview/03javascript/core/110browser/110060_dom2_event_propagation_mechanism",
                "link": "/interview/03javascript/core/110browser/110060_dom2_event_propagation_mechanism"
              },
              {
                "text": "简单介绍 JS 的事件流，事件传播的三个阶段？",
                "key": "/interview/03javascript/core/110browser/110070_eventflow1",
                "link": "/interview/03javascript/core/110browser/110070_eventflow1"
              },
              {
                "text": "解释以下概念：事件传播机制（事件流）、阻止传播、取消默认事件、事件代理？",
                "key": "/interview/03javascript/core/110browser/110080_eventflow2",
                "link": "/interview/03javascript/core/110browser/110080_eventflow2"
              },
              {
                "text": "JS 的事件委托是什么，原理是什么？",
                "key": "/interview/03javascript/core/110browser/110090_event_delegation",
                "link": "/interview/03javascript/core/110browser/110090_event_delegation"
              },
              {
                "text": "window.onload 和 document.onDOMContentLoaded 有什么区别？",
                "key": "/interview/03javascript/core/110browser/110100_onload_ondomcontentloaded",
                "link": "/interview/03javascript/core/110browser/110100_onload_ondomcontentloaded"
              }
            ]
          },
          {
            "text": "其他",
            "collapsed": true,
            "collapsible": true,
            "key": "interview/03javascript/core/120other",
            "items": [
              {
                "text": "防抖、节流的作用，分别在什么场景使用？",
                "key": "/interview/03javascript/core/120other/120010_debounce_throttle",
                "link": "/interview/03javascript/core/120other/120010_debounce_throttle"
              },
              {
                "text": "ajax、axios、fetch 区别？",
                "key": "/interview/03javascript/core/120other/120020_ajax_axios_fetch",
                "link": "/interview/03javascript/core/120other/120020_ajax_axios_fetch"
              },
              {
                "text": "谈谈对模块化开发的理解？",
                "key": "/interview/03javascript/core/120other/120030_modular_development",
                "link": "/interview/03javascript/core/120other/120030_modular_development"
              },
              {
                "text": "简单介绍几种 JS 模块化规范、区别？",
                "key": "/interview/03javascript/core/120other/120040_modular_development_standard",
                "link": "/interview/03javascript/core/120other/120040_modular_development_standard"
              },
              {
                "text": "对于一个无限下拉加载图片的页面，如何给每个图片绑定事件？",
                "key": "/interview/03javascript/core/120other/120050_infinite_dropdown_loadimage_bindevent",
                "link": "/interview/03javascript/core/120other/120050_infinite_dropdown_loadimage_bindevent"
              },
              {
                "text": "什么是？哪些情况会导致内存泄漏？",
                "key": "/interview/03javascript/core/120other/120060_memory_leak",
                "link": "/interview/03javascript/core/120other/120060_memory_leak"
              },
              {
                "text": "什么是设计模式？",
                "key": "/interview/03javascript/core/120other/120070_design_patterns",
                "link": "/interview/03javascript/core/120other/120070_design_patterns"
              },
              {
                "text": "介绍下你了解的设计模式以及使用场景？",
                "key": "/interview/03javascript/core/120other/120080_design_patterns_more",
                "link": "/interview/03javascript/core/120other/120080_design_patterns_more"
              },
              {
                "text": "什么是贪婪模式和非贪婪模式？",
                "key": "/interview/03javascript/core/120other/120090_greedymode_nongreedymode",
                "link": "/interview/03javascript/core/120other/120090_greedymode_nongreedymode"
              },
              {
                "text": "XML 和 JSON 的区别？",
                "key": "/interview/03javascript/core/120other/120100_xml_json",
                "link": "/interview/03javascript/core/120other/120100_xml_json"
              },
              {
                "text": "eval 是做什么的、使用场景？",
                "key": "/interview/03javascript/core/120other/120110_eval",
                "link": "/interview/03javascript/core/120other/120110_eval"
              },
              {
                "text": "webscoket 的连接原理？",
                "key": "/interview/03javascript/core/120other/120120_websocket",
                "link": "/interview/03javascript/core/120other/120120_websocket"
              },
              {
                "text": "什么是 Web Worker，有什么使用场景？",
                "key": "/interview/03javascript/core/120other/120125_web_worker",
                "link": "/interview/03javascript/core/120other/120125_web_worker"
              },
              {
                "text": "各种图片格式的区别，如何选择图片格式，例如 png, webp 等？",
                "key": "/interview/03javascript/core/120other/120130_image_type",
                "link": "/interview/03javascript/core/120other/120130_image_type"
              }
            ]
          }
        ]
      },
      {
        "text": "输出题",
        "collapsed": true,
        "collapsible": true,
        "key": "interview/03javascript/output",
        "items": [
          {
            "text": "No.0010",
            "key": "/interview/03javascript/output/010_js_op",
            "link": "/interview/03javascript/output/010_js_op"
          },
          {
            "text": "No.0020",
            "key": "/interview/03javascript/output/020_js_op",
            "link": "/interview/03javascript/output/020_js_op"
          },
          {
            "text": "No.0030",
            "key": "/interview/03javascript/output/030_js_op",
            "link": "/interview/03javascript/output/030_js_op"
          },
          {
            "text": "No.0040",
            "key": "/interview/03javascript/output/040_js_op",
            "link": "/interview/03javascript/output/040_js_op"
          },
          {
            "text": "No.0050",
            "key": "/interview/03javascript/output/050_js_op",
            "link": "/interview/03javascript/output/050_js_op"
          },
          {
            "text": "No.0055",
            "key": "/interview/03javascript/output/055_js_op",
            "link": "/interview/03javascript/output/055_js_op"
          },
          {
            "text": "No.0060",
            "key": "/interview/03javascript/output/060_js_op",
            "link": "/interview/03javascript/output/060_js_op"
          },
          {
            "text": "No.0070",
            "key": "/interview/03javascript/output/070_js_op",
            "link": "/interview/03javascript/output/070_js_op"
          },
          {
            "text": "No.0080",
            "key": "/interview/03javascript/output/080_js_op",
            "link": "/interview/03javascript/output/080_js_op"
          },
          {
            "text": "No.0090",
            "key": "/interview/03javascript/output/090_js_op",
            "link": "/interview/03javascript/output/090_js_op"
          },
          {
            "text": "No.0100",
            "key": "/interview/03javascript/output/100_js_op",
            "link": "/interview/03javascript/output/100_js_op"
          },
          {
            "text": "No.0110",
            "key": "/interview/03javascript/output/110_js_op",
            "link": "/interview/03javascript/output/110_js_op"
          },
          {
            "text": "No.0120",
            "key": "/interview/03javascript/output/120_js_op",
            "link": "/interview/03javascript/output/120_js_op"
          },
          {
            "text": "No.0130",
            "key": "/interview/03javascript/output/130_js_op",
            "link": "/interview/03javascript/output/130_js_op"
          },
          {
            "text": "No.0140",
            "key": "/interview/03javascript/output/140_js_op",
            "link": "/interview/03javascript/output/140_js_op"
          }
        ]
      },
      {
        "text": "手写题",
        "collapsed": true,
        "collapsible": true,
        "key": "interview/03javascript/write",
        "items": [
          {
            "text": "JS 实现数组 map 方法",
            "key": "/interview/03javascript/write/0010_js_write_map",
            "link": "/interview/03javascript/write/0010_js_write_map"
          },
          {
            "text": "JS 实现数组 forEach 方法",
            "key": "/interview/03javascript/write/0020_js_write_foreach",
            "link": "/interview/03javascript/write/0020_js_write_foreach"
          },
          {
            "text": "JS 实现数组 filter 方法",
            "key": "/interview/03javascript/write/0030_js_wrute_filter",
            "link": "/interview/03javascript/write/0030_js_wrute_filter"
          },
          {
            "text": "JS 实现数组 some 方法",
            "key": "/interview/03javascript/write/0040_js_write_some",
            "link": "/interview/03javascript/write/0040_js_write_some"
          },
          {
            "text": "JS 实现数组 every 方法",
            "key": "/interview/03javascript/write/0050_js_write_every",
            "link": "/interview/03javascript/write/0050_js_write_every"
          },
          {
            "text": "JS 实现数组 reduce 方法",
            "key": "/interview/03javascript/write/0060_js_write_reduce",
            "link": "/interview/03javascript/write/0060_js_write_reduce"
          },
          {
            "text": "JS 实现 compose 方法",
            "key": "/interview/03javascript/write/0070_js_write_compose",
            "link": "/interview/03javascript/write/0070_js_write_compose"
          },
          {
            "text": "JS 实现 instanceof 操作符",
            "key": "/interview/03javascript/write/0080_js_write_instanceof",
            "link": "/interview/03javascript/write/0080_js_write_instanceof"
          },
          {
            "text": "JS 实现 new 操作符",
            "key": "/interview/03javascript/write/0090_js_write_new",
            "link": "/interview/03javascript/write/0090_js_write_new"
          },
          {
            "text": "JS 实现 call 方法",
            "key": "/interview/03javascript/write/0100_js_write_call",
            "link": "/interview/03javascript/write/0100_js_write_call"
          },
          {
            "text": "JS 实现 bind 方法",
            "key": "/interview/03javascript/write/0110_js_write_bind",
            "link": "/interview/03javascript/write/0110_js_write_bind"
          },
          {
            "text": "JS 实现 apply 方法",
            "key": "/interview/03javascript/write/0120_js_write_apply",
            "link": "/interview/03javascript/write/0120_js_write_apply"
          },
          {
            "text": "JS 实现防抖 debounce 方法",
            "key": "/interview/03javascript/write/0130_js_write_debounce",
            "link": "/interview/03javascript/write/0130_js_write_debounce"
          },
          {
            "text": "JS 实现节流 throttle 方法",
            "key": "/interview/03javascript/write/0140_js_write_throttle",
            "link": "/interview/03javascript/write/0140_js_write_throttle"
          },
          {
            "text": "实现 JSON.stringify 方法",
            "key": "/interview/03javascript/write/0150_js_write_stringify",
            "link": "/interview/03javascript/write/0150_js_write_stringify"
          },
          {
            "text": "实现 JSON.parse 方法",
            "key": "/interview/03javascript/write/0160_js_write_parse",
            "link": "/interview/03javascript/write/0160_js_write_parse"
          },
          {
            "text": "JS 实现柯里化 curry 方法",
            "key": "/interview/03javascript/write/0170_js_write_curry",
            "link": "/interview/03javascript/write/0170_js_write_curry"
          },
          {
            "text": "JS 实现 Object.create 方法",
            "key": "/interview/03javascript/write/0180_js_write_object.create",
            "link": "/interview/03javascript/write/0180_js_write_object.create"
          },
          {
            "text": "JS 实现数组去重方法",
            "key": "/interview/03javascript/write/0190_js_write_array_deduplication",
            "link": "/interview/03javascript/write/0190_js_write_array_deduplication"
          },
          {
            "text": "JS 实现数组扁平化方法",
            "key": "/interview/03javascript/write/0200_js_write_flatten_arrays",
            "link": "/interview/03javascript/write/0200_js_write_flatten_arrays"
          },
          {
            "text": "JS 使用 settimeout 模拟实现 setinterval",
            "key": "/interview/03javascript/write/0210_js_write_settimeout_mock_setinterval",
            "link": "/interview/03javascript/write/0210_js_write_settimeout_mock_setinterval"
          },
          {
            "text": "JS 实现发布订阅模式 / EventBus（ on、emit、once、off ）",
            "key": "/interview/03javascript/write/0220_js_write_eventbus",
            "link": "/interview/03javascript/write/0220_js_write_eventbus"
          },
          {
            "text": "JS 实现并发可控的异步调度器",
            "key": "/interview/03javascript/write/0230_js_write_asynchronous_scheduler",
            "link": "/interview/03javascript/write/0230_js_write_asynchronous_scheduler"
          },
          {
            "text": "JS 实现 Promise（包含 all、race）",
            "key": "/interview/03javascript/write/0240_js_write_promise",
            "link": "/interview/03javascript/write/0240_js_write_promise"
          },
          {
            "text": "JS 实现浅拷贝方法",
            "key": "/interview/03javascript/write/0250_js_write_lightclone",
            "link": "/interview/03javascript/write/0250_js_write_lightclone"
          },
          {
            "text": "JS 实现深拷贝方法（考虑 Symbol 类型、循环引用）",
            "key": "/interview/03javascript/write/0260_js_write_deepclone",
            "link": "/interview/03javascript/write/0260_js_write_deepclone"
          },
          {
            "text": "JS 实现大数相加方法",
            "key": "/interview/03javascript/write/0270_js_write_bignum_sum",
            "link": "/interview/03javascript/write/0270_js_write_bignum_sum"
          },
          {
            "text": "JS 实现对象压平方法",
            "key": "/interview/03javascript/write/0280_js_write_objectflatten",
            "link": "/interview/03javascript/write/0280_js_write_objectflatten"
          },
          {
            "text": "JS 实现模板字符串解析方法",
            "key": "/interview/03javascript/write/0290_js_write_stringparse",
            "link": "/interview/03javascript/write/0290_js_write_stringparse"
          },
          {
            "text": "JS 实现让普通对象支持 for...of 遍历",
            "key": "/interview/03javascript/write/0300_js_write_object_support_forof",
            "link": "/interview/03javascript/write/0300_js_write_object_support_forof"
          }
        ]
      }
    ]
  }
]